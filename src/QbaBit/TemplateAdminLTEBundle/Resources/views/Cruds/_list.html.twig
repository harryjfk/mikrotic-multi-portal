{% extends  template_helper.getRedirectedView("QbaBitCoreBundle:Layout:layout.html.twig") %}

    {% set tit = 'qba_bit.core.listado_X' | trans({'X':base_title|trans()}) %}
    {% block title %} {{ tit }} {% endblock %}
    {% set paramsUrl = {'itemid': app.request.get('itemid')} %}


{% block update %}
    <link rel="stylesheet" href="{{ asset('bundles/qbabitcore/forms/switch_check_type/switch.css') }}">
    <link rel="stylesheet" href="{{ asset('bundles/qbabitcore/forms/icheck_type/iCheck/all.css') }}">


    <div class="box-header with-border">
        <div class="user-block">
            <span class="username" style="margin-left: 0px;"><h3
                        style="margin-bottom: 0;margin-top: 0;">{{ tit }}</h3></span>
        </div>
        <!-- /.user-block -->
        <div class="box-tools">
            <div class="dropdown">
                <button class="btn btn-default dropdown-toggle" type="button" id="dropdownOptions"
                        data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    <span class="fa fa-fw fa-cogs"></span>
                    {{ 'qba_bit.core.options' | trans() }}
                    <span class="caret"></span>
                </button>
                <ul class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownOptions">
                    <li>

                        {% if role is defined %}
                            {% if role.new is defined %}
                                {% if is_granted( role.new ) %}
                                    <a href="{{ path(url.new, paramsUrl) }} " class="new"
                                       style="height: auto;"><i
                                                class="fa fa-plus-square"></i>{{ 'qba_bit.core.new' | trans() }}</a>
                                {% endif %}
                            {% endif %}
                        {% endif %}
                    </li>
                    <li>
                        {% if role is defined %}
                            {% if role.delete is defined %}
                                {% if is_granted(role.delete ) %}
                                    <a href="#" class="del"><i
                                                class="fa fa-trash-o"></i>{{ 'qba_bit.core.delete' | trans() }}</a>
                                {% endif %}
                            {% endif %}
                        {% endif %}
                    </li>
                    {% block dropdown_options %}

                    {% endblock %}
                </ul>
            </div>
        </div>
        <!-- /.box-tools -->
    </div>
    {% for tipo, mensajes in app.session.flashbag.all() %}
        {% for mensaje in mensajes %}
            <div class="{{ tipo }}">{{ mensaje }}</div>
        {% endfor %}
    {% endfor %}
    {{ form_start(searchForm,{"action":path(url.view, paramsUrl)}) }}

        <div class="row nmlf">
            {% block search_columns %}
            {% endblock %}
        </div>
        <div class="box-body table-responsive no-padding">
            <table class="table table-hover">
                <thead>
                {% block columns %}
                {% endblock %}
                </thead>
                <tbody>
                {% block row %}

                {% endblock %}
                </tbody>
            </table>
        </div>
        {{ knp_pagination_render(entities) }}

    {{ form_end(searchForm) }}
    {% block additional_items %}

        {% endblock %}
    <script src="{{ asset('bundles/qbabitcore/forms/icheck_type/iCheck/icheck.min.js') }}"></script>

    <script>
        jQuery('#chkall,input[type="checkbox"].minimal, input[type="radio"].minimal').iCheck({
            checkboxClass: 'icheckbox_minimal-blue',
            radioClass: 'iradio_minimal-blue'
        }).trigger('click');//le pongo trigger('click') para corregir bug

        jQuery('#chkall').on('ifToggled', function () {
            MKLib.checkedCtrl(jQuery(this), '.selitm', function (status, ele) {
                ele.iCheck(status ? 'check' : 'uncheck');
            });
        });
        {% if url.delete_list is defined %}
        jQuery('.del').on('click', function (e) {
            e.preventDefault();
            var _this = jQuery(this);

            jQuery('form[name={{ searchForm.vars.id }}]').attr("id","{{ searchForm.vars.id }}");
            var list = jQuery('#{{ searchForm.vars.id }} .selitm:checked');
            if (list.length) {
                if (confirm('{{ 'qba_bit.core.messages.delete_confirm' | trans() }}')) {
                    MKLib.AjaxRequest('{{ path(url.delete_list, paramsUrl) }}', '{{ searchForm.vars.id }}', function (j) {
                        var status = parseInt(j.status);
                        if (status === 1) {
                            jQuery('#frmsearch').trigger('submit');
                            MKLib.deleteItem(j.ids, function () {
                                MKLib.showMsg('alert-success', '{{ 'qba_bit.core.messages.deleted_success' | trans() }}');
                            }, 'rw');
                        } else {
                            if (status === 2)
                                MKLib.showMsg('alert-danger', '{{ 'qba_bit.core.messages.access_denied' | trans() }}');
                            else
                                MKLib.showMsg('alert-danger', '{{ 'qba_bit.core.messages.deleting_error' | trans() }}');
                        }
                        MKLib.unlockScreen();

                    }, 'json', 'DELETE', '{{ config.routing.url }}');
                }
            } else
                MKLib.showMsg('alert-danger', '{{ 'qba_bit.core.messages.select_none' | trans() }}');
        });
        {% endif %}
    </script>
{% endblock %}
