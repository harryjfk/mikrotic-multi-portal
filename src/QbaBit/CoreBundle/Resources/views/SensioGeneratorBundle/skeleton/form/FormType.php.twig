<?php

namespace {{ namespace }}\Form\Admin{{ entity_namespace ? '\\' ~ entity_namespace : '' }};

{% block use_statements %}
use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolver;
use QbaBit\CoreBundle\Form\Base\AccessBaseType;
{% endblock use_statements %}

{% for us in uses %}
 use {{ us }};

{% endfor %}
{% if use_container %}
use QbaBit\CoreBundle\Traits\ServiceContainer;
{% endif %}
{% block class_definition %}
class {{ form_class }} extends AccessBaseType
{% endblock class_definition %}
{
{% block class_body %}
{% if use_container %}
use ServiceContainer;
{% endif %}
    {%- if fields|length > 0 %}
    /**
     * {@inheritdoc}
     */
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
parent::buildForm($builder,$options);
            {%- for field in fields|keys -%}

    {% set class = ("class_control" in (fields[field].getDefaultValues|keys)? fields[field].getDefaultValues["class_control"]:"" ) %}


                $builder->add('{{ fields[field].getFieldName(field) }}',{{ fields[field].simpleType  }}Type::class,array('attr'=>array("class"=>"{{ class }}"),'label'=>'qbabit.admin.{{ bundle_name|lower }}.{{ entity_class|lower }}.fields.{{ field|lower }}','required'=>{{ fields[field].StoredParams.required }}{% if fields[field].hasAdditionalParams  %}, {{ fields[field].buildAdditionalParams(container) }}{% endif  %}) );


            {%- endfor %}
        ;
    }
    {% endif %}

    /**
     * {@inheritdoc}
     */
    public function configureOptions(OptionsResolver $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => '{{ namespace }}\Entity{{ entity_namespace ? '\\' ~ entity_namespace : '' }}\{{ entity_class }}'
        ));
    }

    /**
     * {@inheritdoc}
     */
    public function getBlockPrefix()
    {
        return '{{ form_type_name }}';
    }

{# BC with Symfony 2.7 #}
{%- if get_name_required %}
    /**
     * {@inheritdoc}
     */
    public function getName()
    {
        return $this->getBlockPrefix();
    }
{% endif %}

{% endblock class_body %}
}
